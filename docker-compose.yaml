#-------------------------------------------------------------
# Docker compose
#-------------------------------------------------------------
version: '3.8'

services:  
  #--------------------------------------------------------------------------------------------#
  #                               Homarr -  A homepage for your server.                        #
  #   Simple and lightweight homepage for your server.
  #   That helps you easily access all of your services in one place.
  #   https://github.com/ajnart/homarr
  #--------------------------------------------------------------------------------------------#
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ${SELF_HOME_DIR}/homarr:/app/data/configs
    ports:
      - '7575:7575'

  #--------------------------------------------------------------------------------------------#
  #                              n8n                                                           #
  #   The workflow automation platform that doesn't box you in, that you never outgrow         #
  #   https://n8n.io/
  #--------------------------------------------------------------------------------------------#
  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: always
    profiles:
      - donotstart #do not start service
    ports:
      - 5678:5678
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ${SELF_HOME_DIR}/.n8n:/home/node/.n8n
    # Wait 5 seconds to start n8n to make sure that DB is ready
    # when n8n tries to connect to it
    command: /bin/sh -c "sleep 5; n8n start"

  # Ghostfolio
  # Open Source Wealth Management Software 
  # The application empowers busy people to keep track of stocks, 
  # ETFs or cryptocurrencies and make solid, data-driven investment decisions.
  # https://github.com/ghostfolio/ghostfolio
  ghostfolio:
    container_name: ghostfolio
    image: ghostfolio/ghostfolio
    restart: unless-stopped
    profiles:
      - donotstart #do not start service
    env_file:
      - .env
    environment:
      - DATABASE_URL='postgresql://user:password@postgres:5432/ghostfolio-db?sslmode=prefer'
      - REDIS_HOST='redis'
      - PORT=3333
    depends_on:
      - postgres
      - redis
    ports:
      - 3333:3333
      
  # changedetection.io
  # Self-Hosted, Open Source, Change Monitoring of Web Pages
  # https://github.com/dgtlmoon/changedetection.io
  changedetection:
      container_name: changedetection
      hostname: changedetection
      image: ghcr.io/dgtlmoon/changedetection.io:latest
      restart: unless-stopped
      # Comment out ports: when using behind a reverse proxy , enable networks: etc.
      ports:
        - 1885:5000
      volumes:
        - ${SELF_HOME_DIR}/changedetection/data:/datastore

      environment:
        - WEBDRIVER_URL=http://browser-chrome:4444/wd/hub
        - PLAYWRIGHT_DRIVER_URL=ws://playwright-chrome:3000/
        # Plain requsts - proxy support example.
        # - HTTP_PROXY=http://157.245.33.179:80,http://77.73.241.154:80
        # - HTTPS_PROXY=https://2.39.10.238:8118

  # Selenium - Chrome
  # Docker images for the Selenium Grid Server
  # https://github.com/SeleniumHQ/docker-selenium
  browser-chrome:
      container_name: browser-chrome
      hostname: browser-chrome
      image: selenium/standalone-chrome-debug:3.141.59
      environment:
          - VNC_NO_PASSWORD=1
          - SCREEN_WIDTH=1920
          - SCREEN_HEIGHT=1024
          - SCREEN_DEPTH=16
      volumes:
          # Workaround to avoid the browser crashing inside a docker container
          # See https://github.com/SeleniumHQ/docker-selenium#quick-start
          - /dev/shm:/dev/shm
      restart: unless-stopped
      ports:
        - 4444:4444

   
  # Browserless
  # Chrome as a service container. Bring your own hardware or cloud. 
  # https://github.com/browserless/chrome
  # Used for fetching pages via Playwright+Chrome where you need Javascript support.
  playwright-chrome:
      container_name: "browserless-chrome"
      hostname: playwright-chrome
      image: browserless/chrome
      restart: unless-stopped
      ports:
      - "1886:3000"
      environment:
          - SCREEN_WIDTH=1920
          - SCREEN_HEIGHT=1024
          - SCREEN_DEPTH=16
          - ENABLE_DEBUGGER=false
          - PREBOOT_CHROME=true
          - CONNECTION_TIMEOUT=300000
          - MAX_CONCURRENT_SESSIONS=10
          - CHROME_REFRESH_TIME=600000
          - DEFAULT_BLOCK_ADS=true
          - DEFAULT_STEALTH=true