#-------------------------------------------------------------
# Multi-purpose Docker compose
#-------------------------------------------------------------
version: '3.8'

services:
  #--------------------------------------------------------------------------------------------#
  #                               Homarr -  A homepage for your server.                        #
  #   Simple and lightweight homepage for your server.
  #   That helps you easily access all of your services in one place.
  #   https://github.com/ajnart/homarr
  #--------------------------------------------------------------------------------------------#
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ${SELF_HOME_DIR}/homarr/configs:/app/data/configs
      - ${SELF_HOME_DIR}/homarr/data:/data
      - ${SELF_HOME_DIR}/homarr/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '7575:7575'

  #--------------------------------------------------------------------------------------------#
  #                              n8n                                                           #
  #   The workflow automation platform that doesn't box you in, that you never outgrow         #
  #   https://n8n.io/
  #--------------------------------------------------------------------------------------------#
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    profiles:
      - donotstart #do not start service
    ports:
      - 5678:5678
    env_file:
      - .env
    volumes:
      - ${SELF_HOME_DIR}/n8n:/home/node/.n8n
    # Wait 5 seconds to start n8n to make sure that DB is ready
    # when n8n tries to connect to it
    # command: /bin/sh -c "sleep 5; n8n start"

  #--------------------------------------------------------------------------------------------#
  #                              Ghostfolio                                                    #
  #   Open Source Wealth Management Software                                                   #
  #   The application empowers busy people to keep track of stocks,                            #
  #   ETFs or cryptocurrencies and make solid, data-driven investment decisions.               #
  #   https://github.com/ghostfolio/ghostfolio                                                 #
  #--------------------------------------------------------------------------------------------#
  ghostfolio:
    container_name: ghostfolio
    image: ghostfolio/ghostfolio
    restart: unless-stopped
    profiles:
      - donotstart #do not start service
    env_file:
      - .env
    environment:
      - DATABASE_URL='postgresql://user:password@postgres:5432/ghostfolio-db?sslmode=prefer'
      - REDIS_HOST='redis'
      - PORT=3333
    depends_on:
      - postgres
      - redis
    ports:
      - 3333:3333

  #--------------------------------------------------------------------------------------------#
  #                              Change Detection                                              #
  #   Self-Hosted, Open Source, Change Monitoring of Web Pages                                 #
  #   https://github.com/dgtlmoon/changedetection.io                                           #
  #--------------------------------------------------------------------------------------------#
  changedetection:
    container_name: changedetection
    hostname: changedetection
    image: ghcr.io/dgtlmoon/changedetection.io:latest
    restart: unless-stopped
    # profiles:
    #   - donotstart #do not start service
    # Comment out ports: when using behind a reverse proxy , enable networks: etc.
    ports:
      - 1885:5000
    volumes:
      - ${SELF_HOME_DIR}/changedetection/data:/datastore

    environment:
      - WEBDRIVER_URL=http://browser-chrome:4444/wd/hub
      - PLAYWRIGHT_DRIVER_URL=ws://playwright-chrome:3000/
      # Plain requsts - proxy support example.
      # - HTTP_PROXY=http://157.245.33.179:80,http://77.73.241.154:80
      # - HTTPS_PROXY=https://2.39.10.238:8118
  
  #--------------------------------------------------------------------------------------------#
  #                              Browser Chrome                                                #
  #   This image provides a Selenium Grid Standalone⁠ with Chrome                               #
  #   which enables you to run WebDriver tests remotely⁠.                                       #
  #   https://github.com/SeleniumHQ/docker-selenium                                            #
  #--------------------------------------------------------------------------------------------#
  browser-chrome:
    container_name: browser-chrome
    hostname: browser-chrome
    image: selenium/standalone-chrome-debug:3.141.59
    profiles:
      - donotstart #do not start service
    environment:
      - VNC_NO_PASSWORD=1
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
    volumes:
      # Workaround to avoid the browser crashing inside a docker container
      # See https://github.com/SeleniumHQ/docker-selenium#quick-start
      - /dev/shm:/dev/shm
    restart: unless-stopped
    ports:
      - 4444:4444

  #--------------------------------------------------------------------------------------------#
  #                              Browserless                                                   #
  #   Chrome as a service container. Bring your own hardware or cloud.                         #
  #   Used for fetching pages via Playwright+Chrome where you need Javascript support.         #
  #   https://github.com/browserless/chrome                                                    #
  #--------------------------------------------------------------------------------------------#
  playwright-chrome:
    container_name: "browserless-chrome"
    hostname: playwright-chrome
    image: browserless/chrome
    profiles:
      - donotstart #do not start service
    restart: unless-stopped
    ports:
      - "1886:3000"
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - ENABLE_DEBUGGER=false
      - PREBOOT_CHROME=true
      - CONNECTION_TIMEOUT=300000
      - MAX_CONCURRENT_SESSIONS=10
      - CHROME_REFRESH_TIME=600000
      - DEFAULT_BLOCK_ADS=true
      - DEFAULT_STEALTH=true


  #--------------------------------------------------------------------------------------------#
  #                              Sponsor Block C                                               #
  #   a POSIX shell script that skips sponsored YouTube content                                #
  #   and skippable ads on all local Chromecasts, using the SponsorBlock API.                  #
  #   https://github.com/nichobi/sponsorblockcast                                              #
  #--------------------------------------------------------------------------------------------#
  sponsorblockcast:
    container_name: "sponsorblockcast"
    image: ghcr.io/nichobi/sponsorblockcast:latest
    network_mode: host
    profiles:
      - donotstart #do not start service
    environment:
      SBCPOLLINTERVAL: 1
      SBCSCANINTERVAL: 300
      SBCCATEGORIES: sponsor
      SBCDIR: /tmp/sponsorblockcast
    cap_add:
      - NET_ADMIN
    restart: always
  

  # mealie 
  # Material design inspired recipe manager with category and tag management, shopping-lists, meal-planner, and site customizations. 
  # Mealie is focused on simple user interactions to keep the whole family using the app.
  # https://github.com/hay-kot/mealie
  mealie-omni:
    image: hkotel/mealie:omni-nightly
    container_name: mealie
    profiles:
      - donotstart #do not start service
    ports:
      - "9925:3000" #frontend
      - "9924:9000" #API
    volumes:
      - ${SELF_HOME_DIR}/mealie:/app/data/
    env_file:
      - .env
    environment:
      - ALLOW_SIGNUP=true
      # Database Settings
      - DB_ENGINE=postgres
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mealie
      - BASE_URL=http://mealie.server.local
      # Default Recipe Settings
      - RECIPE_PUBLIC=true
      - RECIPE_SHOW_NUTRITION=false
      - RECIPE_SHOW_ASSETS=true
      - RECIPE_LANDSCAPE_VIEW=true
      - RECIPE_DISABLE_COMMENTS=true
      - RECIPE_DISABLE_AMOUNT=false
    restart: always

  # Invoice Shelf 
  # InvoiceShelf is an open-source web & mobile app that helps you track expenses, payments & create professional invoices & estimates.
  # https://github.com/InvoiceShelf/InvoiceShelf
  invoiceshelf:
    #image: invoiceshelf/invoiceshelf
    #workaround until the permissions problem is solved
    image: invoiceshelf:workaround
    container_name: invoiceshelf
    ports:
      - "9980:80"
      - "9443:443"
    volumes:
      - ${SELF_HOME_DIR}/invoiceshelf/data:/data
      - ${SELF_HOME_DIR}/invoiceshelf/Modules:/var/www/html/InvoiceShelf/Modules
    env_file:
      - .env
    environment:
      - STARTUP_DELAY=30
      - REDIS_HOST=redis
    restart: unless-stopped
    depends_on:
      - db
      - redis

  # Paperless
  # Paperless-ngx is a document management system that transforms your physical documents into a searchable online archive so you can keep, well, less paper.
  # https://github.com/paperless-ngx/paperless-ngx/
  paperless:
    container_name: paperless
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - gotenberg
      - tika
    ports:
      - "9002:8000"
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ${SELF_HOME_DIR}/paperless/data:/usr/src/paperless/data
      - "/Users/macmini/data/paperless/media:/usr/src/paperless/media"
      - "/Users/macmini/data/paperless/export:/usr/src/paperless/export"
      - "/Users/macmini/data/paperless/consume:/usr/src/paperless/consume"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
    env_file:
      - .env

  # Gotenberg
  # Gotenberg provides a developer-friendly API to interact with powerful tools like Chromium and LibreOffice for converting numerous document formats (HTML, Markdown, Word, Excel, etc.) into PDF files, and more!
  # https://gotenberg.dev/
  # https://github.com/gotenberg/gotenberg
  gotenberg:
    container_name: gotenberg
    image: docker.io/gotenberg/gotenberg:7.8
    restart: unless-stopped
    ports:
      - 9004:3000

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  # Apache Tika Server
  # https://tika.apache.org/
  tika:
    container_name: tika
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    ports:
      - "9998:9998"

  # Lube Logger
  # Self-Hosted, Open-Source, Unconventionally-Named Vehicle Maintenance Records and Fuel Mileage Tracker
  # https://lubelogger.com/
  lubelogger:
    container_name: lubelogger
    image: ghcr.io/hargata/lubelogger:latest
    restart: unless-stopped
    volumes:
      - ${SELF_HOME_DIR}/lubelogger/config:/App/config
      - ${SELF_HOME_DIR}/lubelogger/data:/App/data
      - ${SELF_HOME_DIR}/lubelogger/translations:/App/wwwroot/translations
      - ${SELF_HOME_DIR}/lubelogger/documents:/App/wwwroot/documents
      - ${SELF_HOME_DIR}/lubelogger/images:/App/wwwroot/images
      - ${SELF_HOME_DIR}/lubelogger/temp:/App/wwwroot/temp
      - ${SELF_HOME_DIR}/lubelogger/log:/App/log
      - ${SELF_HOME_DIR}/lubelogger/keys:/root/.aspnet/DataProtection-Keys
    ports:
      - 9083:8080
    env_file:
      - .env

  #--------------------------------------------------------------------------------------------#
  #                               Actual -  A local-first personal finance tool.               #
  #   Actual is a super fast privacy-focused app for managing your finances.                   #
  #   You own your data,                                                                       #                 
  #   Sync it across all devices with optional end-to-end encryption.                          #
  #   https://github.com/actualbudget/actual-server                                            #
  #--------------------------------------------------------------------------------------------#
  actual_server:
    container_name: actual
    image: docker.io/actualbudget/actual-server:latest
    ports:
      # This line makes Actual available at port 5006 of the device you run the server on,
      # i.e. http://localhost:5006. You can change the first number to change the port, if you want.
      - 5006:5006
    volumes:
      - ${SELF_HOME_DIR}/actual-data:/data
    profiles:
      - donotstart #do not start service
    restart: unless-stopped

  #--------------------------------------------------------------------------------------------#
  #                                 Stirling-PDF                                               #
  #   This is a robust, locally hosted web-based PDF manipulation tool using Docker.           #
  #   It enables you to carry out various operations on PDF files, including                   #
  #   splitting, merging, converting, reorganizing, adding images, rotating, compressing,      #
  #   and more.                                                                                #
  #   This locally hosted web application has evolved to encompass a comprehensive set of      #
  #   features, addressing all your PDF requirements.                                          #
  #   https://github.com/Stirling-Tools/Stirling-PDF                                           #
  #--------------------------------------------------------------------------------------------#
  stirling-pdf:
    container_name: stirling-pdf
    image: frooodle/s-pdf:latest-fat
    ports:
      - 8084:8080
    volumes:
      - ${SELF_HOME_DIR}/stirling-pdf/configs:/configs
      - ${SELF_HOME_DIR}/stirling-pdf/training-data:/usr/share/tessdata #Required for extra OCR languages
      - ${SELF_HOME_DIR}/stirling-pdf/custom-files:/customFiles
      - ${SELF_HOME_DIR}/stirling-pdf/logs:/logs
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_GB,en_US,pt_PT
    restart: unless-stopped
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1'
    #       memory: 512M
